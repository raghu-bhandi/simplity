<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
>
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.infosys.qreuse</groupId>
	<artifactId>example</artifactId>
  	<version>1.1.2</version>
	<packaging>war</packaging>
	<name>example Maven Webapp</name>
	<url>http://maven.apache.org</url>
	<properties>
		<resourcespath> ${project.build.directory}/classes</resourcespath>
		<storage.dir>${user.home}/simplity/files</storage.dir>
	</properties>
	<repositories>
		<repository>
			<id>codelds</id>
			<url>https://code.lds.org/nexus/content/groups/main-repo</url>
		</repository>
	</repositories>
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.simplity</groupId>
			<artifactId>kernel</artifactId>
			<version>1.1.2</version>
		</dependency>
		<dependency>
			<groupId>com.oracle</groupId>
			<artifactId>ojdbc6</artifactId>
			<version>11.2.0.3</version>
			<scope>compile</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.h2database/h2 -->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>1.3.166</version>
		</dependency>
	</dependencies>
	<build>
		<finalName>example</finalName>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>sql-maven-plugin</artifactId>
					<version>1.5</version>
					<dependencies>
						<dependency>
							<groupId>com.h2database</groupId>
							<artifactId>h2</artifactId>
							<version>1.3.166</version>
						</dependency>
					</dependencies>
					<configuration>
						<driver>org.h2.Driver</driver>
						<url>jdbc:h2:file:${user.home}/simplity/db/classicmodels</url>
						<username>sa</username>
						<password></password>
						<autocommit>true</autocommit>
						<skip>${maven.test.skip}</skip>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sql-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>create-db</id>
						<phase>install</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<srcFiles>
								<srcFile>${resourcespath}/scripts/create_classicmodels.sql</srcFile>
							</srcFiles>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.0.1</version>
				<executions>
					<execution>
						<id>copy-resources1</id>
						<!-- here the phase you need -->
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/src/main/webapp/WEB-INF/comp</outputDirectory>
							<resources>
								<resource>
									<directory>${basedir}/src/main/resources/config</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-resources2</id>
						<!-- here the phase you need -->
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${storage.dir}</outputDirectory>
							<resources>
								<resource>
									<directory>${basedir}/src/main/resources/downloads</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>					
				</executions>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<!-- When built in OpenShift the 'openshift' profile will be used 
				when invoking mvn. -->
			<!-- Use this profile for any OpenShift specific customization your 
				app will need. -->
			<!-- By default that is to put the resulting archive into the 'deployments' 
				folder. -->
			<!-- http://maven.apache.org/guides/mini/guide-building-for-different-environments.html -->
			<id>openshift</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-war-plugin</artifactId>
						<version>2.1.1</version>
						<configuration>
							<outputDirectory>deployments</outputDirectory>
							<warName>ROOT</warName>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>dev</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<phase>install</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
										<delete
											file="${project.build.outputDirectory}/environment.properties" />
										<copy
											file="src/main/resources/environment.test.properties"
											tofile="${project.build.outputDirectory}/environment.properties" />
									</tasks>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<skip>true</skip>
						</configuration>
					</plugin>
					<plugin>
						<artifactId>maven-jar-plugin</artifactId>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<classifier>test</classifier>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>